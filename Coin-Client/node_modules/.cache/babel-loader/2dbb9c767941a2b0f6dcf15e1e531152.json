{"ast":null,"code":"var _jsxFileName = \"/Users/jamesburns/Desktop/flatiron/phase3/Phase-3-Project/Coin-Client/src/components/CryptoPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport ProjectDetail from \"./ProjectDetail\";\nimport CryptoList from './CryptoList';\nimport { Route, Routes } from \"react-router\";\nimport TopMovers from \"./TopMovers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CryptoPage(_ref) {\n  _s();\n\n  let {\n    name,\n    table,\n    global,\n    trend\n  } = _ref;\n  const [detail, setDetail] = useState([]);\n  const [searchContent, setSearch] = useState('');\n\n  function round(price) {\n    if (price > 100) {\n      return Math.round(price, 0);\n    } else if (price > 2) {\n      return price.toFixed(2);\n    } else if (price === 1) {\n      return price.toFixed(1);\n    } else if (price < 0.001) {\n      return price.toFixed(6);\n    } else if (price > 0) {\n      return price.toFixed(4);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      searchContent: searchContent,\n      setSearch: setSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \":id\",\n        element: /*#__PURE__*/_jsxDEV(ProjectDetail, {\n          detail: detail,\n          setDetail: setDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TopMovers, {\n      round: round,\n      trend: trend\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CryptoList, {\n      round: round,\n      table: table\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CryptoPage, \"hk7uqRr91oQMhMeDoHJ8Dze4hfU=\");\n\n_c = CryptoPage;\nexport default CryptoPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoPage\");","map":{"version":3,"sources":["/Users/jamesburns/Desktop/flatiron/phase3/Phase-3-Project/Coin-Client/src/components/CryptoPage.js"],"names":["React","useState","SearchBar","ProjectDetail","CryptoList","Route","Routes","TopMovers","CryptoPage","name","table","global","trend","detail","setDetail","searchContent","setSearch","round","price","Math","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,cAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,SAASC,UAAT,OAAmD;AAAA;;AAAA,MAA/B;AAACC,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA;AAAtB,GAA+B;AAC/C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACc,aAAD,EAAgBC,SAAhB,IAA6Bf,QAAQ,CAAC,EAAD,CAA3C;;AAEA,WAASgB,KAAT,CAAeC,KAAf,EAAqB;AACjB,QAAGA,KAAK,GAAC,GAAT,EAAa;AACT,aAAOC,IAAI,CAACF,KAAL,CAAWC,KAAX,EAAiB,CAAjB,CAAP;AACF,KAFF,MAEO,IAAGA,KAAK,GAAC,CAAT,EAAW;AACd,aAAOA,KAAK,CAACE,OAAN,CAAc,CAAd,CAAP;AACF,KAFK,MAEA,IAAGF,KAAK,KAAG,CAAX,EAAa;AAChB,aAAOA,KAAK,CAACE,OAAN,CAAc,CAAd,CAAP;AACF,KAFK,MAEA,IAAGF,KAAK,GAAC,KAAT,EAAe;AAClB,aAAOA,KAAK,CAACE,OAAN,CAAc,CAAd,CAAP;AACF,KAFK,MAGD,IAAGF,KAAK,GAAC,CAAT,EAAW;AACb,aAAOA,KAAK,CAACE,OAAN,CAAc,CAAd,CAAP;AACF;AACL;;AACD,sBACI;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,aAAa,EAAEL,aAA1B;AAAyC,MAAA,SAAS,EAAEC;AAApD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,KAAZ;AAAkB,QAAA,OAAO,eAAE,QAAC,aAAD;AAAe,UAAA,MAAM,EAAEH,MAAvB;AAA+B,UAAA,SAAS,EAAEC;AAA1C;AAAA;AAAA;AAAA;AAAA;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEG,KAAlB;AAAyB,MAAA,KAAK,EAAEL;AAAhC;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEK,KAAnB;AAA0B,MAAA,KAAK,EAAEP;AAAjC;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUC;;GA5BIF,U;;KAAAA,U;AA6BT,eAAeA,UAAf","sourcesContent":["import React,{useState} from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport ProjectDetail from \"./ProjectDetail\";\nimport CryptoList from './CryptoList';\nimport { Route, Routes } from \"react-router\";\nimport TopMovers from \"./TopMovers\";\n\nfunction CryptoPage({name, table, global, trend }) {\n    const [detail, setDetail] = useState([]);\n    const [searchContent, setSearch] = useState('');\n\n    function round(price){\n        if(price>100){\n            return Math.round(price,0)\n         }else if(price>2){\n            return price.toFixed(2)\n         }else if(price===1){\n            return price.toFixed(1)\n         }else if(price<0.001){\n            return price.toFixed(6)\n         }\n         else if(price>0){\n            return price.toFixed(4)\n         }\n    }\n    return (      \n        <div>\n            <SearchBar searchContent={searchContent} setSearch={setSearch}/>\n            <Routes>\n                <Route path=\":id\" element={<ProjectDetail detail={detail} setDetail={setDetail}/>} />\n            </Routes>\n            <TopMovers round={round} trend={trend}/>\n            <CryptoList round={round} table={table}/>\n        </div>\n      );\n    }\nexport default CryptoPage;"]},"metadata":{},"sourceType":"module"}